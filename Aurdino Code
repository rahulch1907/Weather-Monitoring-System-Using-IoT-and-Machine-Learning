#include <DHT.h>
#include <ESP8266WiFi.h>

String apiKey = "";  // Enter your Write API key from ThingSpeak
const char* ssid = ""; // replace with your wifi ssid and wpa2 key
const char* pass = "";
const char* server = "api.thingspeak.com";

#define DHTPIN D5    // pin where the DHT11 is connected
#define LDRPIN D2    // pin where the LDR is connected

DHT dht(DHTPIN, DHT11);
int ldrSensorValue = 0;

WiFiClient client;

void setup()
{
  Serial.begin(115200);
  delay(10);
  dht.begin();

  Serial.println("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, pass);

  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
}

void loop()
{
  float h = dht.readHumidity();
  float t = dht.readTemperature();

  ldrSensorValue = analogRead(LDRPIN); // Read the LDR sensor value

  if (isnan(h) || isnan(t))
  {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  if (client.connect(server, 80))
  {
    String postStr = apiKey;
    postStr += "&field1=";
    postStr += String(t);
    postStr += "&field2=";
    postStr += String(h);
    postStr += "&field3="; 
    postStr += String(ldrSensorValue);
    postStr += "\r\n\r\n";

    client.print("POST /update HTTP/1.1\n");
    client.print("Host: api.thingspeak.com\n");
    client.print("Connection: close\n");
    client.print("X-THINGSPEAKAPIKEY: " + apiKey + "\n");
    client.print("Content-Type: application/x-www-form-urlencoded\n");
    client.print("Content-Length: ");
    client.print(postStr.length());
    client.print("\n\n");
    client.print(postStr);

    Serial.print("Temperature: ");
    Serial.print(t);
    Serial.print(" degrees Celsius, Humidity: ");
    Serial.print(h);
    Serial.print("%. LDR Value: ");
    Serial.print(ldrSensorValue); // Print the LDR sensor value
    Serial.println(". Send to ThingSpeak.");
  }
  client.stop();

  Serial.println("Waiting...");

  delay(1000); // Use a regular space here, and the delay is set to 1000 milliseconds (1 seconds)
}
